services:
  # api_dev:
  #   build:
  #     context: .
  #     dockerfile: docker/dev/api/Dockerfile
  #   container_name: api_dev_api
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - ml
  #   environment:
  #     - DATA_PATH=/data/
  #   volumes:
  #     - ./data:/data

  # ml_dev:
  #   build:
  #     context: .
  #     dockerfile: docker/dev/ml/Dockerfile
  #   container_name: ml_dev_pipeline
  #   volumes:
  #     - ./models:/models
  #     - ./data:/data
  #   environment:
  #     - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
  #     - MLFLOW_TRACKING_USERNAME=${MLFLOW_TRACKING_USERNAME}
  #     - MLFLOW_TRACKING_PASSWORD=${MLFLOW_TRACKING_PASSWORD}

  postgres:
    image: postgres:15
    container_name: mlflow_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev_net

  minio:
    image: minio/minio:latest
    container_name: mlflow_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # Console UI
    volumes:
      - minio_data:/data
    networks:
      - dev_net

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 minio minio123;
      mc mb local/mlflow;
      mc policy set public local/mlflow;
      exit 0;
      "
    networks:
      - dev_net

  mlflow:
    build:
      context: .
      dockerfile: docker/dev/mlflow/Dockerfile
    container_name: mlflow_server
    restart: unless-stopped
    depends_on:
      - postgres
      - minio
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://mlflow:mlflow@postgres:5432/mlflow
      MLFLOW_ARTIFACT_ROOT: s3://mlflow/
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_DEFAULT_REGION: us-east-1
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    ports:
      - "5000:5000"
    command: >
      server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://mlflow:mlflow@postgres:5432/mlflow
      --default-artifact-root s3://mlflow/
    networks:
      - dev_net

volumes:
  postgres_data:
  minio_data:

networks:
  dev_net:
    driver: bridge
